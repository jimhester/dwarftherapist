RELEASE DFhack 0.1.1 (March 16, 2010)
 
 * Incorporates the new addresses for all released linux versions as well as windows versions all the way back to 39a
 * Fixed Suspend/Resume issues which caused the speed to be slow, especially when using the shm on linux, it now only suspends once per refresh for all the dwarves, not for each creature
 * Zhentar - Added Artifact names to the detail screen if a dwarf created the artifact
 * Zhentar also did a bunch of work on figuring out the name structure in DF, so big kudos to him

RELEASE DFhack 0.1.0 (March 03, 2010)
CHANGES SINCE 0.0.5

  * major stability improvements, this should be at least on par with the original DT now
  * the reloading now only refreshes the jobs and happiness of the dwarves, so it is much faster
  * added a death icon for when a dwarf dies when it is auto-refreshing
  * use the dfhack shm to edit the string objects for names and professions directly, no restrictions on name lengths any longer, and no data corruption on windows and linux!
  * scrapped all of the hackish key scripting to input names
  * added the loaded fortresses name to the title bar
  * changed sorting of some skills, as per Zhentar's suggestions
  * fixed many crash bugs related to refreshing the dwarves while doing other things in DT
  * updated QT in precompiled windows version to 4.6.2
  * uses the latest stable dfhack before the shm rewrite

RELEASE DFhack 0.0.5 (Janurary 12, 2009)
CHANGES DFHack 0.0.1
===============================================================================
MAJOR CHANGES:

 * Made the name scripting much more robust, you can now do it from any menu and pause state and it will work correctly (but not return you to the previous place)

RELEASE DFhack (December 24, 2009)
CHANGES SINCE 0.4.2
===============================================================================
MAJOR CHANGES:

 * DFHack backend
 * Zooming to the currently selected Dwarf
 * Following the currently selected Dwarf
 * Periodic refreshing of all the dwarves (so you can watch their jobs change over time)
 * Added new grouping method "Current Job", and it rules (Fixed issue 9)
 * Dwarf material, item, and food likes
 * Nick Name and Custom Profession changing by using simulated key presses
 * Filtering by custom scripting

RELEASE 0.4.2 (October 26, 2009)
CHANGES SINCE 0.4.1
===============================================================================
MAJOR CHANGES:
 * You can now set a dwarf's weapon count, shield type and armor type
 * You can now set a dwarf's  main weapon type (Fixed issue 137)
 * Added new grouping method "Military Status" for helping out when choosing new military. (Fixed issue 134)
 * Added new grouping method "Squad" which does what it sounds like :)
 * Added new grouping method "Current Job", and it rules (Fixed issue 9)
 * GridViews are now either custom or built-in. Built-in gridviews cannot be edited. (Fixed issue 147)
 * Welcome back Athlon owners! Fixed problem running on non-SSE2 processors (Athlon) (Fixed issue 120)
MINOR CHANGES: 
 * You can now have custom professions that have the same name as a default profession, 
   and trying to delete that custom profession (for instance "Miner") will force you to 
   change the profession for all dwarfs that have the custom profession set to "Miner", 
   but not dwarfs whose main default profession is "Miner" (Fixed issue 144)
 * Added AttributeColumns (Fixes issue 122)
 * Added a name completer to the filter box (guesses names based on what's been typed) 
   Searching for characters that don't start a dwarf name still works though. 
 * Added labor cheating option to main options tab (when checked you can set labors on anything) (Fixed issue 125)
BUG FIXES:
 * Fixed Happiness labels (Content has a range of 50 points not 25) (Fixed issue 139)
 * Professions now all have male and female versions of their title (only used for Baron, Count etc...) (Fixed issue 140)
 * Fixed invalidation flags in all windows versions for filtering out invaders and the undead
   This should fix non-site dwarfs showing in the list (Fixed issue 116)
 * Added more checks for lost connections (for those that turn off the alert) (Fixed issue 129)
 * Fix Bulk Toggle (Hauling, etc) Does Not Display Changes On Grid (work on issue 135)
 * Duplicate name defense on ViewColumnSet::add_column(), dupe names now get incremental numbers appended to their name
 * Added "Set Profession Text" Option on Right-Click Context Menu for dwarfs (Fixes issue 130)
 * Tabs now properly update after editing gridviews that are currently shown (and not shown)
 * Fixed bad drawing of happiness cells (no OS highlight anymore)
 * Attempting to add a Grid view that has been deleted triggers crash (Fixed issue 124)
 * Fixed broken labor sorting (Fixed issue 117)
 * Split "Grid Colors" from "Grid options" section of Options screen (Fixed issue 126)

RELEASE 0.4.1 (October 6, 2009)
CHANGES SINCE 0.4.0
===============================================================================
MAJOR CHANGES:
 * Dwarf traits are now shown in the DwarfDetailsDock! (Fixed issue 113)
 * Improved sorting behavior on names. You can now right-click the top of the names column for sort options (Fixed issue 115)
 * Fixed the dwarf details handling to now open the dock on double click or "show details..." if it is not already open.
 * You can now group dwarfs by migration wave (this relies on guesswork and may be very broken)
MINOR CHANGES:
 * DwarfDetailsDock now shows a better default screen on load
BUG FIXES:
 * Fixed showstopper for folks using custom professions (issues 112 and 114) This was a bug
   preventing users from being able to toggle labors for some dwarfs with custom professions set.
 * Allow sorting when grouped by profession again (oversight)
 
RELEASE 0.4.0 (October 3, 2009)
CHANGES SINCE 0.3.2
===============================================================================
MAJOR CHANGES:
 * Full re-write of the sets and views handler. View customization now rules if I may say so myself. (Fixed issue 89)
 * Custom views can now be imported/exported like custom professions (this should get us sharing views!)
 * New dwarf details dialog is epic (Fixes issue 95)
MINOR CHANGES:
 * Labors can now include an "excludes" list which will make sure only one of the professions in list can be active at a time. (Fixes issue 91)
 * Column headers now highlight as you move around the main cells (Fixes issue 80)
 * Views now remember selected dwarfs when switching tabs, sort order, or grouping (Fixes issue 108)
 * Added new option for alerting when connection is lost to DF (Fixes issue 102)
 * Added new option for checking for updates on startup
 * Reworked the about menu to allow manual update checks. 
 * Options menu is now broken into different tabs with better tooltips for each options (Fixed issue 105)
 * Added a mechanism for HappinessColumn to update itself independent from DwarfModel redraws (much faster)
 * HappinessColumn now draws an aggregate cell that shows the lowest happiness in a group for (eye-catching-ness)
 * Hacked up ColorPickerButton a bit to show the hex code of custom colors
 * There is now a display for total number of dwarfs next to the big number of pending changes display (Fixed issue 100)
 * Views can now be copied via their context menus
 * You can now dump memory for a dwarf to a text dialog (not for general use)
 * Dwarf detail dock now shows attributes as well as a graph for when the next attribute will be gained
 * Skill legend dock now allows right click to change the active skill drawing method (Fixes issue 85)
BUG FIXES:
 * Fixed color choosers not remembering the last custom color used (Fixed issue 103) 
 * Removed incorrect entries in the non_labor_professions (Fixed issues 87 & 106)
 * Fixed a bug where set re-ordering wasn't being persisted after editing.
 * Fixed a stupid bug where any GridView being changed caused ViewManager to write/read/redraw/write/read/redraw (this took almost 3 seconds in debug builds) Much much faster handling of this now.
 * Fixed a bug where newly added sets were promptly thrown away after accepting the edit dialog :)
 * Fixed a bug in the SpacerColumn ctor that did not explicitly set a width (spacers with a width of -8923232 don't look quite right, BTW)
 * Fixed a bug in the ViewColumn QSettings-based ctor where the column was not being automatically added to the set that was passed in
 * fixed a stupid thing I was doing with the GridViewDock (allowing context menus anywhere on the widget), also added a "new set" action to the GridViewDock's context menu.
 * Fixed some bugs with column re-ordering in a set
 * Added icons to the GridViewDock context menu
 * Fixed a bug where skill columns weren't being drawn in the editor
 * Fixed a bug where the user's tab order wasn't being saved on changes
 * Fixed a bug where DT only recognized 6 happiness levels to support all 7 that actually exist
 * Additional languages cause dwarf names to be wrong (Fixes issue 101)
 * Reworked the XP displays that were broken in the 0.3.2 release (Fixes issue 93)
 * Fixed bug where overridden column background colors weren't being honored (Fixes issue 86)
 * Reverse sort the special column types so that "Spacer" is the default instead of "Happiness" when editing a column set (Fixed issue 90)
 * Fixed crash on windows when launched with option read on start set, and no DF version is running (Fixed issues 84, 99)

RELEASE 0.3.2 (September 13, 2009)
CHANGES SINCE 0.3.1
===============================================================================
MAJOR CHANGES:
	* added support for 40d15 & 40d16 on Windows
	* re-implemented experience display. Tooltips now show experience as: 
	  "current/nextlevel (%progress)" (issue 67)
	* Fixed up tooltips for skill and labor columns to nicely show skills with 
	  true level and experience (issues 75,77)
	* Fixed the window finding issues on XP and Vista (Thanks to Guhndahb and 
	  0x517A5D) 
MINOR CHANGES:
	* Added non-labor setting professions (child, baby, noble etc...) This 
	  should keep users from setting illegal labors (issue 60)
	* tooltips now show the generic translation of a dwarf's name (issues 68, 
	  70, 76)
	* fixed a bug where the translation tables were read despite having 0 values
	  (issues 68, 70, 76)
	* Labor changes not added if Read Dwarves is pressed before Commit Changes 
	  (issue 69)
	* Got rid of both library dependencies on both windows and linux (they are 
	  statically compiled in making building easier)
	* Windows now maps memory segments the same way linux does, this prevents 
	  access violations etc..., making sure we only read known committed 
	  readable memory segments
FEATURE REQUESTS:
 * Added option to show full dwarf names in the options menu (requires 
   re-reading the dwarfs due to caching) (issue 66)
 * added new option to always expand all groups (feature request 83)
 * Enabled labors with no skill in the labor now get a slight boost in sort 
   order. So if you sort a labor by skill, enabled-but-unskilled dwarfs will 
   show just after dabbling dwarves. (feature request 78)
 * Added a new skill drawing method SDM_NUMERIC which draws numbers for the 
   level on the grid (looks good actually) (issues 75,77)
 * Re-did the other SKILL_DRAWING_METHODs to differentiate between 0xp and 
   dabbling. Something is now draw for each of them if skill is over 0exp. 
   (issues 75,77)
 * Skill objects now default to a -1 rating instead of 0 (this was causing a 
   merge between dabbling and 0 experience) (issues 75,77)
 * reworked the dwarf tooltips (show profession in tooltip) (issues 68, 70, 
	 76)
 

RELEASE 0.3.1 (August 19, 2009)
CHANGES SINCE 0.3.0
===============================================================================
 * HappinessColumn tooltip now shows the english version of the happiness level
 * Skills now correctly read experience (Fixed issue 1)
 * fixed issue 58 (can't repro it anymore)
 * Added ability to toggle an entire set at once for a dwarf or a group of 
   dwarfs
 * added support for 40d14
 * (Fixed issue 5): Show skill-ratings legend somewhere
 * Moved the dock config around. Views, Sets, and Skill legend docks are now 
   off by default and can be turned on in a variety of ways. They also default 
   to floating windows that can be docked.
 * (Fixed issue 42): Hangs if game saved/continued without reloading
 * DT now heartbeats every second to DF. It a fort is unloaded or the game 
   exits, DT will disconnect and allow reconnection.
 * (Implemented issue 40): Profession mgmt - separate file/export
 * Fixed a minor drawing bug with selected rows not showing the main grid 
   underneath
 * Fixed a bug where the Viewmanager would try to draw tabs with invalid indexes
 * (Fixed issue 55): Confirm overwrite if View or Set name exists
	 This dialog only pops up when you aren't editing. To prevent accidental 
	 clobbering.
	 Cases where it shows up:
		 Edit View1, change the name to View2(which already exists)
		 New view, change the name to View2(which already exists)
		 Will not show up on edit if the original name was View3 and you save it as 
		   View3.
	 Since it doesn't show up in the general case, I've opted to not implement 
	 the "don't ask me again" checkbox
 * (Fixed issue 54) Blank name is allowed for set name
 * (Fixed issue 53) Main window doesn't show changes after changing group by
 * generic_useless.ini set wasn't correct, so I removed it
 * StateTableView now remembers which rows were expanded and which weren't
 * Setting the group by now goes thru ViewManager so the columns don't get 
   stretched incorrectly 
 * (Fixed issue 57) Dwarf Name column resets to fixed-width
 * (Fixed issue 63) Options Window Duplicates Custom Professions
 * (Fixes issue 61) customizable skill icons
 * (Fixes issue 62) option to turn of shading
 * some minor speedups based on a trial of profiler
 * Dwarf::nice_name() is now cached since it hardly ever changes
 * GameDataReader now caches skill names and skill level names (and uses them)
 * UberDelegate now passes adjusted rectangles by reference to the sub-painters
   for less stack thrashing
 * Less QString::operator+ usage, since it seems to cause reallocations and is
   generally slow as fucking hell
 * Found some spots where build_rows() was being called multiple times and 
   being slow
